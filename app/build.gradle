/*
 *
 * Copyright (c) 2020. Andrii Kovalchuk
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


// Create a variable called propertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def propertiesFile = rootProject.file("local.properties")

// Initialize a new Properties() object called keystoreProperties.
def properties = new Properties()

// Load your properties file into the keystoreProperties object.
properties.load(new FileInputStream(propertiesFile))

android {
	signingConfigs {
		release {
			storeFile file(properties['storeFile'])
			storePassword properties['storePassword']
			keyAlias properties['keyAlias']
			keyPassword properties['keyPassword']
		}
	}

	compileSdkVersion 30

	defaultConfig {
		applicationId "com.mmdev.kudago.app"
		minSdkVersion 21
		//targetSdkVersion 'R'
		targetSdkVersion 30
		versionCode 1
		versionName "1.0"
		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
		//testInstrumentationRunner "com.mmdev.kudago.app.KoinTestRunner"
	}

	buildTypes {
		release {
			minifyEnabled false
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
			signingConfig signingConfigs.release
		}
	}

	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}

	kotlinOptions {
		jvmTarget = "1.8"
	}

	buildFeatures{
		viewBinding = true
		// for data binding :
		// dataBinding = true
	}

	testOptions {
		unitTests {
			returnDefaultValues = true
			includeAndroidResources = true
		}
		animationsDisabled = true
	}

}

dependencies {

	def lifecycle_version = "2.3.0-beta01"
	def koin_version = "2.2.0"
	def navigation_version = "2.3.1"
	def retrofit2_version = "2.9.0"
	def kotlinCoroutines_version = "1.4.1"
	def room_version = "2.3.0-alpha03"
	

	implementation fileTree(dir: 'libs', include: ['*.jar'])

	//core
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
	implementation 'androidx.core:core-ktx:1.5.0-alpha05'
	implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
	implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
	implementation "com.github.yandextaxitech:binaryprefs:1.0.1"

	//ui
	implementation 'androidx.constraintlayout:constraintlayout:2.1.0-alpha1'
	implementation 'com.google.android.material:material:1.3.0-alpha04'

	//di
	implementation "org.koin:koin-android:$koin_version"
	implementation "org.koin:koin-core:$koin_version"

//	//picasso
//	implementation 'com.squareup.picasso:picasso:2.71828'

	//network
	implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
	implementation "com.squareup.okhttp3:logging-interceptor:4.10.0-RC1"
	implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"

	//Kotlin Coroutines
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutines_version"
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutines_version"

	//navigation
	implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
	implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"

	// Room architecture component dependencies
	implementation "androidx.room:room-ktx:$room_version"
	implementation "androidx.room:room-runtime:$room_version"
	kapt "androidx.room:room-compiler:$room_version"

	//google
	implementation 'com.google.android.libraries.maps:maps:3.1.0-beta'

	//tests
	testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$kotlin_version"
	testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
	testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinCoroutines_version"
	androidTestImplementation "org.koin:koin-test:$koin_version"
	testImplementation "com.squareup.okhttp3:mockwebserver:4.7.2"
	def mockito_version = "3.3.3"
	testImplementation "org.mockito:mockito-core:$mockito_version"
	testImplementation "org.mockito:mockito-inline:$mockito_version"
	testImplementation 'junit:junit:4.13.1'
	androidTestImplementation 'androidx.test.ext:junit:1.1.2'
	androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'


}
